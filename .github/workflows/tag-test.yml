name: tagtest

on:
  workflow_dispatch:
    inputs:
      environment:
        description: 'デプロイ先を選択'
        required: true
        type: choice
        options:
          - development
          - integration
          - staging
          - production
      commit_id:
        description: 'コミットIDを指定してデプロイする(ブランチ指定の場合は空文字を入力)'
        type: string
      is_production:
        description: '本番環境にデプロイする(以降の項目も入力する必要があります)'
        type: boolean
      version:
        description: 'バージョン'
        type: string
      previous_tag:
        description: '1つ前のリリースタグ(空文字の場合は自動決定)'
        type: string

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.inputs.commit_id }}

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Generate release tag
        uses: actions/github-script@v7
        id: release-tag
        with:
          script: |
            const version = process.env.VERSION

            let preReleaseCount = 1
            let preReleaseTag

            while (true) {
              preReleaseTag = `v${version}-${String(preReleaseCount).padStart(3, '0')}`
              try {
                await github.rest.git.getRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `tags/${preReleaseTag}`
                })
                preReleaseCount += 1
              } catch (error) {
                if (error.status === 404) {
                  break
                } else {
                  throw error
                }
              }
            }

            console.log(preReleaseTag)
            return preReleaseTag
          result-encoding: string
        env:
          VERSION: ${{ github.event.inputs.version }}

      - name: Get previous tag
        if: github.event.inputs.previous_tag == null
        uses: actions/github-script@v7
        id: get-previous
        with:
          script: |
            const tags = await github.rest.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            })
            console.log(tags)
            return tags.data[0].name
          result-encoding: string

      - name: Generate release notes
        uses: actions/github-script@v7
        with:
          script: |
            const previousTag = process.env.PREVIOUS_TAG
            const version = process.env.VERSION

            const releaseNotes = await github.rest.repos.generateReleaseNotes({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: version,
              previous_tag_name: previousTag
            });
            console.log(releaseNotes);

            const data = new Date().toLocaleDateString("ja-JP", { year: "numeric", month: "2-digit", day: "2-digit"})
            const title = `リリース(${version}) ${data}`

            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: version,
              name: title,
              body: releaseNotes.data.body,
            });
        env:
          PREVIOUS_TAG: ${{ steps.get-previous.outputs.result && steps.get-previous.outputs.result || github.event.inputs.previous_tag }}
          VERSION: ${{ steps.release-tag.outputs.result }}
