name: Tag

on:
  workflow_dispatch:
    inputs:
      tag:
        type: string

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Configure Git
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com

      - name: Generate release tag
        uses: actions/github-script@v7
        id: release-tag
        with:
          script: |
            const inputTag = process.env.TAG

            let releaseCount = 1
            let releaseTag

            while (true) {
              releaseTag = `${inputTag}-${String(releaseCount).padStart(3, '0')}`
              try {
                await github.rest.git.getRef({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  ref: `tags/${releaseTag}`
                })
                releaseCount += 1
              } catch (error) {
                if (error.status === 404) {
                  break
                } else {
                  throw error
                }
              }
            }
            console.log(releaseTag)

            return releaseTag
          result-encoding: string
        env:
          TAG: ${{ github.event.inputs.tag }}

      - name: Get previous tag
        uses: actions/github-script@v7
        id: get-previous
        with:
          script: |
            const previousTags = await github.rest.repos.listTags({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 1
            })
            const previousTag = previousTags.data.length > 0 ? previousTags.data[0].name : '';

            console.log(previousTag)
            return previousTag
          result-encoding: string

      - name: Push release tag
        run: |
          git tag ${{ steps.release-tag.outputs.result }}
          git push origin ${{ steps.release-tag.outputs.result }}

      - name: Generate release notes
        uses: actions/github-script@v7
        with:
          script: |
            const previousTag = process.env.PREVIOUS_TAG
            const releaseTag = process.env.RELEASE_TAG

            const releaseNotesParams = {
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: releaseTag,
            };

            if (previousTag) {
              releaseNotesParams.previous_tag_name = previousTag;
            }

            const releaseNotes = await github.rest.repos.generateReleaseNotes(releaseNotesParams);
            console.log(releaseNotes);

            await github.rest.repos.createRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              tag_name: releaseTag,
              body: releaseNotes.data.body,
            });
          result-encoding: string
        env:
          PREVIOUS_TAG: ${{ steps.get-previous.outputs.result }}
          RELEASE_TAG: ${{ steps.release-tag.outputs.result }}
